// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var $$Array           = require("bs-platform/lib/js/array.js");
var Spectacle         = require("spectacle");
var Js_boolean        = require("bs-platform/lib/js/js_boolean.js");
var Js_mapperRt       = require("bs-platform/lib/js/js_mapperRt.js");
var ReasonReact       = require("reason-react/src/ReasonReact.js");
var Js_null_undefined = require("bs-platform/lib/js/js_null_undefined.js");
var Default           = require("spectacle/lib/themes/default");

function colorsDefinitionToJs(param) {
  return {
          primary: param[/* primary */0],
          secondary: param[/* secondary */1],
          tertiary: param[/* tertiary */2],
          quarternary: param[/* quarternary */3]
        };
}

function colorsDefinitionFromJs(param) {
  return /* record */[
          /* primary */param.primary,
          /* secondary */param.secondary,
          /* tertiary */param.tertiary,
          /* quarternary */param.quarternary
        ];
}

function fontDefinitionToJs(param) {
  return {
          name: param[/* name */0],
          googleFont: param[/* googleFont */1],
          styles: param[/* styles */2]
        };
}

function fontDefinitionFromJs(param) {
  return /* record */[
          /* name */param.name,
          /* googleFont */param.googleFont,
          /* styles */param.styles
        ];
}

function fontsDefinitionToJs(fonts) {
  return {
          primary: fontDefinitionToJs(fonts[/* primary */0]),
          secondary: fontDefinitionToJs(fonts[/* secondary */1])
        };
}

function createTheme(colors, fonts) {
  return Default.default(colorsDefinitionToJs(colors), fontsDefinitionToJs(fonts));
}

var jsMapperConstantArray = /* array */[
  /* tuple */[
    -922086728,
    "none"
  ],
  /* tuple */[
    -476456824,
    "pacman"
  ],
  /* tuple */[
    4895187,
    "bar"
  ],
  /* tuple */[
    561678025,
    "number"
  ]
];

function progressToJs(param) {
  return Js_mapperRt.binSearch(4, param, jsMapperConstantArray);
}

function progressFromJs(param) {
  return Js_mapperRt.revSearch(4, jsMapperConstantArray, param);
}

var jsMapperConstantArray$1 = /* array */[
  /* tuple */[
    -1011501700,
    "fade"
  ],
  /* tuple */[
    -866590270,
    "spin"
  ],
  /* tuple */[
    -789011693,
    "zoom"
  ],
  /* tuple */[
    -20462287,
    "slide"
  ]
];

function transitionToJs(param) {
  return Js_mapperRt.binSearch(4, param, jsMapperConstantArray$1);
}

function transitionFromJs(param) {
  return Js_mapperRt.revSearch(4, jsMapperConstantArray$1, param);
}

function make($staropt$star, $staropt$star$1, theme, children) {
  var transition = $staropt$star ? $staropt$star[0] : /* array */[/* slide */-20462287];
  var progress = $staropt$star$1 ? $staropt$star$1[0] : /* pacman */-476456824;
  return ReasonReact.wrapJsForReason(Spectacle.Deck, {
              transition: $$Array.map(transitionToJs, transition),
              progress: Js_mapperRt.binSearch(4, progress, jsMapperConstantArray),
              theme: Js_null_undefined.from_opt(theme)
            }, children);
}

var Deck = /* module */[
  /* progressToJs */progressToJs,
  /* progressFromJs */progressFromJs,
  /* transitionToJs */transitionToJs,
  /* transitionFromJs */transitionFromJs,
  /* make */make
];

function make$1(bgColor, children) {
  return ReasonReact.wrapJsForReason(Spectacle.Slide, {
              bgColor: Js_null_undefined.from_opt(bgColor)
            }, children);
}

var Slide = /* module */[/* make */make$1];

function make$2($staropt$star, $staropt$star$1, $staropt$star$2, textColor, $staropt$star$3, children) {
  var size = $staropt$star ? $staropt$star[0] : 1;
  var fit = $staropt$star$1 ? $staropt$star$1[0] : /* false */0;
  var lineHeight = $staropt$star$2 ? $staropt$star$2[0] : 1;
  var caps = $staropt$star$3 ? $staropt$star$3[0] : /* false */0;
  return ReasonReact.wrapJsForReason(Spectacle.Heading, {
              size: size,
              fit: Js_boolean.to_js_boolean(fit),
              lineHeight: lineHeight,
              textColor: Js_null_undefined.from_opt(textColor),
              caps: Js_boolean.to_js_boolean(caps)
            }, children);
}

var Heading = /* module */[/* make */make$2];

function make$3($staropt$star, $staropt$star$1, $staropt$star$2, $staropt$star$3, children) {
  var ordered = $staropt$star ? $staropt$star[0] : /* false */0;
  var reversed = $staropt$star$1 ? $staropt$star$1[0] : /* false */0;
  var start = $staropt$star$2 ? $staropt$star$2[0] : 1;
  var type_ = $staropt$star$3 ? $staropt$star$3[0] : "1";
  return ReasonReact.wrapJsForReason(Spectacle.List, {
              ordered: Js_boolean.to_js_boolean(ordered),
              reversed: Js_boolean.to_js_boolean(reversed),
              start: start,
              type: type_
            }, children);
}

var List = /* module */[/* make */make$3];

function make$4(children) {
  return ReasonReact.wrapJsForReason(Spectacle.ListItem, { }, children);
}

var ListItem = /* module */[/* make */make$4];

function make$5(children) {
  return ReasonReact.wrapJsForReason(Spectacle.Appear, { }, children);
}

var Appear = /* module */[/* make */make$5];

function make$6(alt, src, width, height, children) {
  return ReasonReact.wrapJsForReason(Spectacle.Image, {
              alt: alt,
              width: Js_null_undefined.from_opt(width),
              height: Js_null_undefined.from_opt(height),
              src: src
            }, children);
}

var Image = /* module */[/* make */make$6];

function make$7(children) {
  return ReasonReact.wrapJsForReason(Spectacle.Notes, { }, children);
}

var Notes = /* module */[/* make */make$7];

function make$8(children) {
  return ReasonReact.wrapJsForReason(Spectacle.BlockQuote, { }, children);
}

var BlockQuote = /* module */[/* make */make$8];

function make$9(children) {
  return ReasonReact.wrapJsForReason(Spectacle.Quote, { }, children);
}

var Quote = /* module */[/* make */make$9];

function make$10(children) {
  return ReasonReact.wrapJsForReason(Spectacle.Cite, { }, children);
}

var Cite = /* module */[/* make */make$10];

function make$11(children) {
  return ReasonReact.wrapJsForReason(Spectacle.Layout, { }, children);
}

var Layout = /* module */[/* make */make$11];

function make$12(children) {
  return ReasonReact.wrapJsForReason(Spectacle.Fit, { }, children);
}

var Fit = /* module */[/* make */make$12];

function make$13(children) {
  return ReasonReact.wrapJsForReason(Spectacle.Fill, { }, children);
}

var Fill = /* module */[/* make */make$13];

function make$14(children) {
  return ReasonReact.wrapJsForReason(Spectacle.Text, { }, children);
}

var Text = /* module */[/* make */make$14];

exports.colorsDefinitionToJs   = colorsDefinitionToJs;
exports.colorsDefinitionFromJs = colorsDefinitionFromJs;
exports.fontDefinitionToJs     = fontDefinitionToJs;
exports.fontDefinitionFromJs   = fontDefinitionFromJs;
exports.fontsDefinitionToJs    = fontsDefinitionToJs;
exports.createTheme            = createTheme;
exports.Deck                   = Deck;
exports.Slide                  = Slide;
exports.Heading                = Heading;
exports.List                   = List;
exports.ListItem               = ListItem;
exports.Appear                 = Appear;
exports.Image                  = Image;
exports.Notes                  = Notes;
exports.BlockQuote             = BlockQuote;
exports.Quote                  = Quote;
exports.Cite                   = Cite;
exports.Layout                 = Layout;
exports.Fit                    = Fit;
exports.Fill                   = Fill;
exports.Text                   = Text;
/* spectacle Not a pure module */
