// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var ReasonReact             = require("reason-react/src/ReasonReact.js");
var Examples$ReactTemplate  = require("./Examples.js");
var CodeSlide$ReactTemplate = require("./components/CodeSlide.js");
var Spectacle$ReactTemplate = require("./components/Spectacle.js");

var component = ReasonReact.statelessComponent("Presentation");

var theme = Spectacle$ReactTemplate.createTheme(/* record */[
      /* primary */"#db4d3f",
      /* secondary */"black",
      /* tertiary */"white",
      /* quarternary */"white"
    ], /* record */[
      /* primary : record */[
        /* name */"Roboto Slab",
        /* googleFont : true */1,
        /* styles : array */["300"]
      ],
      /* secondary : record */[
        /* name */"Roboto",
        /* googleFont : true */1,
        /* styles : array */["300"]
      ]
    ]);

function s(prim) {
  return prim;
}

function make() {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      return ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Deck[/* make */4](/* None */0, /* Some */[/* bar */4895187], /* Some */[theme], /* array */[
                      ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Slide[/* make */0](/* None */0, /* array */[
                                ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Heading[/* make */0](/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */["ReasonML"])),
                                ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Heading[/* make */0](/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */["+"])),
                                ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Heading[/* make */0](/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */["BuckleScript"])),
                                ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Heading[/* make */0](/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */["="])),
                                ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Appear[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Heading[/* make */0](/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */["ðŸŽ‰"]))]))
                              ])),
                      ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Slide[/* make */0](/* Some */["tertiary"], /* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.BlockQuote[/* make */0](/* array */[
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Quote[/* make */0](/* array */["Javascript is great, because of the ecosystem,"])),
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Appear[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Quote[/* make */0](/* array */["not because itâ€™s maintainable out-of-the-box."]))]))
                                        ]))])),
                      ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Slide[/* make */0](/* Some */["tertiary"], /* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Layout[/* make */0](/* array */[
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Fit[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.BlockQuote[/* make */0](/* array */[
                                                              ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Quote[/* make */0](/* array */["Flowtype"])),
                                                              ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Quote[/* make */0](/* array */["TypeScript"]))
                                                            ]))])),
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Fill[/* make */0](/* array */[])),
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Fit[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.BlockQuote[/* make */0](/* array */[
                                                              ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Quote[/* make */0](/* array */["Elm"])),
                                                              ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Quote[/* make */0](/* array */["ClojureScript"])),
                                                              ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Quote[/* make */0](/* array */["PureScript"]))
                                                            ]))]))
                                        ]))])),
                      ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Slide[/* make */0](/* Some */["tertiary"], /* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Image[/* make */0]("functionl programming", "/images/functional-programming.jpg", /* None */0, /* Some */["700"], /* array */[]))])),
                      ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Slide[/* make */0](/* Some */["tertiary"], /* array */[
                                ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Heading[/* make */0](/* None */0, /* None */0, /* None */0, /* Some */["primary"], /* None */0, /* array */["Types are useful"])),
                                ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Heading[/* make */0](/* Some */[3], /* None */0, /* None */0, /* None */0, /* None */0, /* array */["when composing curried functions, itâ€™s easy to make a mistake."]))
                              ])),
                      ReasonReact.element(/* None */0, /* None */0, CodeSlide$ReactTemplate.make("reason", Examples$ReactTemplate.currying, /* array */[
                                /* record */[
                                  /* loc : tuple */[
                                    0,
                                    1
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["function to make api request & decode json"]
                                ],
                                /* record */[
                                  /* loc : tuple */[
                                    1,
                                    2
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["make request, returns Promise of response"]
                                ],
                                /* record */[
                                  /* loc : tuple */[
                                    2,
                                    3
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["decode JSON, returns Promise of JSON object"]
                                ],
                                /* record */[
                                  /* loc : tuple */[
                                    3,
                                    4
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["convert generic JSON into some model object"]
                                ]
                              ], /* None */0, /* array */[])),
                      ReasonReact.element(/* None */0, /* None */0, CodeSlide$ReactTemplate.make("reason", Examples$ReactTemplate.promise, /* array */[
                                /* record */[
                                  /* loc : tuple */[
                                    1,
                                    2
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["function to transform value of type a' to Promise of type b' after previous promise resolved"]
                                ],
                                /* record */[
                                  /* loc : tuple */[
                                    2,
                                    3
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["previous promise wrapping type a'"]
                                ],
                                /* record */[
                                  /* loc : tuple */[
                                    3,
                                    4
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["new promise with value of type b'"]
                                ]
                              ], /* None */0, /* array */[])),
                      ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Slide[/* make */0](/* Some */["tertiary"], /* array */[
                                ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Heading[/* make */0](/* Some */[3], /* None */0, /* None */0, /* None */0, /* None */0, /* array */["React is functional"])),
                                ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.List[/* make */0](/* None */0, /* None */0, /* None */0, /* None */0, /* array */[
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Appear[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.ListItem[/* make */0](/* array */["Components as functions of state"]))])),
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Appear[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.ListItem[/* make */0](/* array */["preferably immutable"]))])),
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Appear[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.ListItem[/* make */0](/* array */["declarative"]))])),
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Appear[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.ListItem[/* make */0](/* array */["emphasis on first-class and higher-order functions"]))]))
                                        ]))
                              ])),
                      ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Slide[/* make */0](/* Some */["tertiary"], /* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Image[/* make */0]("Bloomberg", "/images/bloomberg.png", /* None */0, /* None */0, /* array */[]))])),
                      ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Slide[/* make */0](/* Some */["#ab5ea3"], /* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Heading[/* make */0](/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */["BuckleScript"]))])),
                      ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Slide[/* make */0](/* Some */["tertiary"], /* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Heading[/* make */0](/* None */0, /* None */0, /* None */0, /* Some */["secondary"], /* None */0, /* array */["Compiles OCaml to JavaScript"]))])),
                      ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Slide[/* make */0](/* Some */["tertiary"], /* array */[
                                ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Heading[/* make */0](/* None */0, /* None */0, /* None */0, /* Some */["secondary"], /* None */0, /* array */["Why OCaml?"])),
                                ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.List[/* make */0](/* None */0, /* None */0, /* None */0, /* None */0, /* array */[
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Appear[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.ListItem[/* make */0](/* array */["Sound type system."]))])),
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Appear[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.ListItem[/* make */0](/* array */["Strong type inference."]))])),
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Appear[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.ListItem[/* make */0](/* array */["Expressive type features, like variants, modules & objects."]))]))
                                        ]))
                              ])),
                      ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Slide[/* make */0](/* Some */["tertiary"], /* array */[
                                ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Heading[/* make */0](/* Some */[3], /* None */0, /* None */0, /* Some */["secondary"], /* None */0, /* array */["BuckleScript features"])),
                                ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.List[/* make */0](/* None */0, /* None */0, /* None */0, /* None */0, /* array */[
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Appear[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.ListItem[/* make */0](/* array */["dead code elimination,"]))])),
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Appear[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.ListItem[/* make */0](/* array */["compile-time optimizations,"]))])),
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Appear[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.ListItem[/* make */0](/* array */["readable & tiny JS output,"]))])),
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Appear[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.ListItem[/* make */0](/* array */["preservation of code structure,"]))])),
                                          ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Appear[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.ListItem[/* make */0](/* array */["fast iteration loop."]))]))
                                        ]))
                              ])),
                      ReasonReact.element(/* None */0, /* None */0, CodeSlide$ReactTemplate.make("reason", Examples$ReactTemplate.getPosition, /* array */[
                                /* record */[
                                  /* loc : tuple */[
                                    16,
                                    17
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["We are wrapping \"navigator.geolocation.getCurrentPosition\""]
                                ],
                                /* record */[
                                  /* loc : tuple */[
                                    15,
                                    16
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["We are providing two callbacks: for success and for failure."]
                                ],
                                /* record */[
                                  /* loc : tuple */[
                                    14,
                                    15
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["This is a BuckleScript macro to mark this function as global."]
                                ],
                                /* record */[
                                  /* loc : tuple */[
                                    12,
                                    13
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["Error is just some abstract type."]
                                ],
                                /* record */[
                                  /* loc : tuple */[
                                    6,
                                    11
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["Position is an object with coordinate and timestamp."]
                                ],
                                /* record */[
                                  /* loc : tuple */[
                                    0,
                                    5
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["Coordinate is an object with latitude and longitude."]
                                ]
                              ], /* None */0, /* array */[])),
                      ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Slide[/* make */0](/* Some */["tertiary"], /* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.BlockQuote[/* make */0](/* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Quote[/* make */0](/* array */["ReasonML is just JavaScript-like syntax for OCaml"]))]))])),
                      ReasonReact.element(/* None */0, /* None */0, CodeSlide$ReactTemplate.make("reason", Examples$ReactTemplate.patternMatching, /* array */[
                                /* record */[
                                  /* loc : tuple */[
                                    0,
                                    4
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["payload is some variant type"]
                                ],
                                /* record */[
                                  /* loc : tuple */[
                                    5,
                                    6
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["we construct payload"]
                                ],
                                /* record */[
                                  /* loc : tuple */[
                                    8,
                                    9
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["to construct a message with pattern match on data"]
                                ],
                                /* record */[
                                  /* loc : tuple */[
                                    9,
                                    10
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["if it's GoodResult, use theMessage"]
                                ],
                                /* record */[
                                  /* loc : tuple */[
                                    10,
                                    11
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["if it's BadResult, use errorCode"]
                                ],
                                /* record */[
                                  /* loc : tuple */[
                                    13,
                                    16
                                  ],
                                  /* title : None */0,
                                  /* note : Some */["compiler will warn us about missing NoResult variant"]
                                ]
                              ], /* None */0, /* array */[])),
                      ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Slide[/* make */0](/* None */0, /* array */[ReasonReact.element(/* None */0, /* None */0, Spectacle$ReactTemplate.Heading[/* make */0](/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */["Thanks"]))]))
                    ]));
    });
  return newrecord;
}

exports.component = component;
exports.theme     = theme;
exports.s         = s;
exports.make      = make;
/* component Not a pure module */
